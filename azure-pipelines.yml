# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [AzurePipelines (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration AzurePipelines --host AzurePipelines
#
# </auto-generated>
# ------------------------------------------------------------------------------

variables:
  - group: Tokens

trigger:
  branches:
    include:
      - main
      - feature/*
      - fix/*
  paths:
    exclude:
      - docs/*
      - README.md

stages:
  - stage: ubuntu_latest
    displayName: 'ubuntu-latest'
    dependsOn: [  ]
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: Compile
        displayName: 'Compile'
        dependsOn: [  ]
        steps:
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore Compile --skip'
      - job: IntegrationTests
        displayName: 'IntegrationTests'
        dependsOn: [ Compile ]
        strategy:
          parallel: 10
        steps:
          - task: CmdLine@2
            inputs:
              script: './build.cmd IntegrationTests --skip --test-partition $(System.JobPositionInPhase)'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: tests-results
              pathtoPublish: 'output/tests-results'
      - job: UnitTests
        displayName: 'UnitTests'
        dependsOn: [ Compile ]
        strategy:
          parallel: 10
        steps:
          - task: CmdLine@2
            inputs:
              script: './build.cmd UnitTests --skip --test-partition $(System.JobPositionInPhase)'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: tests-results
              pathtoPublish: 'output/tests-results'
      - job: Tests
        displayName: 'Tests'
        dependsOn: [ UnitTests, IntegrationTests ]
        steps:
          - task: CmdLine@2
            inputs:
              script: './build.cmd Tests --skip'
      - job: Pack
        displayName: 'Pack'
        dependsOn: [ Tests ]
        steps:
          - task: CmdLine@2
            inputs:
              script: './build.cmd Pack --skip'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: output
              pathtoPublish: 'output'
  - stage: windows_latest
    displayName: 'windows-latest'
    dependsOn: [  ]
    pool:
      vmImage: 'windows-latest'
    jobs:
      - job: Compile
        displayName: 'Compile'
        dependsOn: [  ]
        steps:
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore Compile --skip'
      - job: IntegrationTests
        displayName: 'IntegrationTests'
        dependsOn: [ Compile ]
        strategy:
          parallel: 10
        steps:
          - task: CmdLine@2
            inputs:
              script: './build.cmd IntegrationTests --skip --test-partition $(System.JobPositionInPhase)'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: tests-results
              pathtoPublish: 'output/tests-results'
      - job: UnitTests
        displayName: 'UnitTests'
        dependsOn: [ Compile ]
        strategy:
          parallel: 10
        steps:
          - task: CmdLine@2
            inputs:
              script: './build.cmd UnitTests --skip --test-partition $(System.JobPositionInPhase)'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: tests-results
              pathtoPublish: 'output/tests-results'
      - job: Tests
        displayName: 'Tests'
        dependsOn: [ UnitTests, IntegrationTests ]
        steps:
          - task: CmdLine@2
            inputs:
              script: './build.cmd Tests --skip'
      - job: Pack
        displayName: 'Pack'
        dependsOn: [ Tests ]
        steps:
          - task: CmdLine@2
            inputs:
              script: './build.cmd Pack --skip'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: output
              pathtoPublish: 'output'
