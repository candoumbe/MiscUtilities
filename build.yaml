variables :
    configuration: 'Release'
    Parameters.projects: '**/*.csproj'
    Parameters.projects.tests: '**/*Tests/*.csproj'
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'
    projectName: 'Utilities'
    azureArtifactFeed: 'Utilities'

pr:
  - master
  - release

trigger:
  batch: true
  branches:
    include:
        - master
        - feature/*
        - fix/*
        - hotfix/*
        - release/*
  paths:
    exclude:
        - README.md
        - docs/*

pool:
  name: Hosted VS2017
#Your build pipeline references an undefined variable named ‘Parameters.projects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references a secret variable named ‘github.apiKey’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 3.x'
  inputs:
    version: 3.x
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 3.0.100'
  inputs:
    version: 3.0.100

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 2.2.401'
  inputs:
    version: 2.2.401

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: '$(Parameters.projects)'
    arguments: '-c $(configuration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: '$(Parameters.projects.tests)'
    arguments: '--no-build -c $(configuration) --collect:"XPlat Code Coverage" /p:CoverletOutput=$(Agent.TempDirectory)\ /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'

- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --global dotnet-reportgenerator-globaltool
  displayName: Install ReportGenerator tool
  
- script: reportgenerator -reports:$(Agent.TempDirectory)\**\coverage.*.cobertura.xml -targetdir:$(Build.SourcesDirectory)\coverlet\reports -reporttypes:"Cobertura"
  displayName: Create reports
  
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)\coverlet\reports\Cobertura.xml  


- task: nkdagility.gittasks.gitsync-task.gitsync@1
  displayName: 'Git Publish to https://$(github.apiKey)@github.com/candoumbe/$(projectName).git'
  inputs:
    GitRepoUrl: 'https://$(github.apiKey)@github.com/candoumbe/$(projectName).git'
  condition: succeededOrFailed()